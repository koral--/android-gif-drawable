plugins {
	id "pl.droidsonroids.ui.test" version "2.0.0"
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply from: 'gradle-mvn-push.gradle'

version = VERSION_NAME
group = GROUP

android {
	compileSdkVersion versions.compileSdk

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	defaultConfig {
		versionName project.version
		minSdkVersion versions.minSdk
		targetSdkVersion versions.targetSdk
		consumerProguardFiles 'consumer-proguard-rules.pro'
		testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
		externalNativeBuild {
			cmake {
				arguments "-DANDROID_PLATFORM=android-$versions.minSdk"
				cFlags '-std=c11', '-Weverything', '-Wall'
				if (isDebugBuild()) {
					cFlags '-DDEBUG', '-g'
				} else {
					cFlags '-DNDEBUG', '-Os', '-g0', '-fvisibility=hidden'
				}
			}
		}
	}
	externalNativeBuild {
		cmake {
			path 'src/main/c/CMakeLists.txt'
		}
	}
	testBuildType 'release'
	signingConfigs {
		release {
			storeFile new File("$System.env.HOME/.android/debug.keystore")
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
	}
	buildTypes {
		release {
			signingConfig signingConfigs.release
			if (isDebugBuild()) {
				debuggable true
				jniDebuggable true
			}
		}
	}
	testOptions {
		unitTests.returnDefaultValues = true
	}
}

dependencies {
	compileOnly "androidx.annotation:annotation:$versions.androidX"
	testCompileOnly "androidx.annotation:annotation:$versions.androidX"
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.mockito:mockito-core:2.23.0'
	testImplementation 'org.robolectric:robolectric:3.8'
	testImplementation 'org.assertj:assertj-core:3.11.1'
	testImplementation 'net.jodah:concurrentunit:0.4.3'
	testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
	androidTestImplementation 'junit:junit:4.12'
	androidTestImplementation 'org.assertj:assertj-core:1.7.1'
	androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
	androidTestCompileOnly "androidx.annotation:annotation:$versions.androidX"
	androidTestImplementation "androidx.test:rules:$versions.androidXtest"
	androidTestImplementation "androidx.test:runner:$versions.androidXtest"
	androidTestImplementation "androidx.test.ext:junit:$versions.androidXextJunit"
}

jacocoAndroidUnitTestReport {
	html.enabled true
	xml.enabled true
}

def isDebugBuild() {
	!gradle.startParameter.taskNames.contains("uploadArchives") && VERSION_NAME.contains("SNAPSHOT")
}

task archiveSymbols(type: Tar) {
	from new File(buildDir, 'intermediates/cmake/release/obj')
	baseName = "$POM_ARTIFACT_ID-symbols"
	destinationDir = new File(buildDir, 'libs')
	extension = 'tar.gz'
	compression = Compression.GZIP
}